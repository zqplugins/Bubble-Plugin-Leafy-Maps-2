function(instance, properties, context){
	function _0x5b47(_0x8cf0ed, _0x22d2a3) {
    const _0x21db5e = _0x21db();
    return _0x5b47 = function (_0x5b47be, _0x4bb71e) {
        _0x5b47be = _0x5b47be - 0x1a4;
        let _0x54f5ff = _0x21db5e[_0x5b47be];
        return _0x54f5ff;
    }, _0x5b47(_0x8cf0ed, _0x22d2a3);
}
(function (_0x597fc6, _0x1dfea6) {
    const _0x1cdcc5 = _0x5b47, _0x173b83 = _0x597fc6();
    while (!![]) {
        try {
            const _0x1d7bdc = parseInt(_0x1cdcc5(0x1b1)) / 0x1 + parseInt(_0x1cdcc5(0x1b3)) / 0x2 + parseInt(_0x1cdcc5(0x1bc)) / 0x3 * (-parseInt(_0x1cdcc5(0x1b8)) / 0x4) + parseInt(_0x1cdcc5(0x1c2)) / 0x5 * (-parseInt(_0x1cdcc5(0x1bb)) / 0x6) + -parseInt(_0x1cdcc5(0x1a6)) / 0x7 * (-parseInt(_0x1cdcc5(0x1a8)) / 0x8) + parseInt(_0x1cdcc5(0x1be)) / 0x9 * (-parseInt(_0x1cdcc5(0x1c3)) / 0xa) + parseInt(_0x1cdcc5(0x1b0)) / 0xb;
            if (_0x1d7bdc === _0x1dfea6)
                break;
            else
                _0x173b83['push'](_0x173b83['shift']());
        } catch (_0x3ccc47) {
            _0x173b83['push'](_0x173b83['shift']());
        }
    }
}(_0x21db, 0x4530a));
function run(_0x3d16a9, _0x44becf, _0x1e9a27) {
    const _0x34e9c1 = _0x5b47, _0xdee34a = function (_0x1745d6, _0x238d96) {
            const _0x3da56a = _0x5b47;
            var _0x3edfe5 = 0x0, _0xda2517 = 0x0, _0x3d61c2 = 0x0, _0x81f4cb = [], _0x2ddc9a = 0x0, _0x56eb57 = 0x0, _0x5db44c = null, _0x9a84c0, _0x2111e6, _0x1ebfd4 = Math['pow'](0xa, _0x238d96 || 0x6);
            while (_0x3edfe5 < _0x1745d6[_0x3da56a(0x1b6)]) {
                _0x5db44c = null, _0x2ddc9a = 0x0, _0x56eb57 = 0x0;
                do {
                    _0x5db44c = _0x1745d6['charCodeAt'](_0x3edfe5++) - 0x3f, _0x56eb57 |= (_0x5db44c & 0x1f) << _0x2ddc9a, _0x2ddc9a += 0x5;
                } while (_0x5db44c >= 0x20);
                _0x9a84c0 = _0x56eb57 & 0x1 ? ~(_0x56eb57 >> 0x1) : _0x56eb57 >> 0x1, _0x2ddc9a = _0x56eb57 = 0x0;
                do {
                    _0x5db44c = _0x1745d6[_0x3da56a(0x1bf)](_0x3edfe5++) - 0x3f, _0x56eb57 |= (_0x5db44c & 0x1f) << _0x2ddc9a, _0x2ddc9a += 0x5;
                } while (_0x5db44c >= 0x20);
                _0x2111e6 = _0x56eb57 & 0x1 ? ~(_0x56eb57 >> 0x1) : _0x56eb57 >> 0x1, _0xda2517 += _0x9a84c0, _0x3d61c2 += _0x2111e6, _0x81f4cb[_0x3da56a(0x1b7)]([
                    _0xda2517 / _0x1ebfd4,
                    _0x3d61c2 / _0x1ebfd4
                ]);
            }
            return _0x81f4cb;
        };
    let _0x25da48 = [], _0x55bc92 = (_0x3d861a, _0x151246, _0x391cfd) => {
            const _0x52ec3b = _0x5b47;
            let _0x1948da = _0x3d861a[_0x52ec3b(0x1ab)](_0x151246, _0x391cfd);
            return _0x1948da;
        }, _0xfdd332 = (_0x4405b4, _0x51387a) => {
            let _0x125040 = _0x55bc92(_0x4405b4, 0x0, _0x51387a);
            return _0x125040;
        };
    if (_0x44becf[_0x34e9c1(0x1b4)])
        _0x25da48 = _0xdee34a(_0x44becf[_0x34e9c1(0x1ba)], 0x6);
    else {
        if (!_0x44becf['use_encoded_shape_polyline']) {
            let _0x58ff76 = _0xfdd332(_0x44becf[_0x34e9c1(0x1a5)], _0x44becf[_0x34e9c1(0x1a5)][_0x34e9c1(0x1b6)]()), _0x7ecd31 = _0xfdd332(_0x44becf[_0x34e9c1(0x1a4)], _0x44becf['list_of_longitudes'][_0x34e9c1(0x1b6)]());
            const _0x224ce3 = (_0xa293a0, _0x2cf4d2, _0x3d9abd) => {
                _0x25da48['push']([
                    _0x58ff76[_0x2cf4d2],
                    _0x7ecd31[_0x2cf4d2]
                ]);
            };
            _0x58ff76[_0x34e9c1(0x1ad)](_0x224ce3);
        }
    }
    let _0x12061c = {
        'color': _0x44becf['stroke_color'],
        'weight': _0x44becf[_0x34e9c1(0x1b5)],
        'opacity': _0x44becf['stroke_opacity'],
        'lineCap': _0x44becf[_0x34e9c1(0x1b2)],
        'lineJoin': _0x44becf[_0x34e9c1(0x1c1)]
    };
    _0x3d16a9[_0x34e9c1(0x1bd)]['' + _0x44becf[_0x34e9c1(0x1ac)]] = L[_0x34e9c1(0x1a9)](_0x25da48, _0x12061c)[_0x34e9c1(0x1ae)](_0x3d16a9[_0x34e9c1(0x1bd)]['mymap']), _0x3d16a9['data']['' + _0x44becf[_0x34e9c1(0x1ac)]]['on'](_0x34e9c1(0x1af), function () {
        const _0x349e91 = _0x34e9c1;
        _0x3d16a9[_0x349e91(0x1c0)]('geometry_clicked_name', _0x44becf[_0x349e91(0x1ac)]);
    }), _0x44becf[_0x34e9c1(0x1b9)] && _0x3d16a9['data'][_0x34e9c1(0x1aa)][_0x34e9c1(0x1a7)](_0x3d16a9[_0x34e9c1(0x1bd)]['' + _0x44becf[_0x34e9c1(0x1ac)]]['getBounds']());
}
function _0x21db() {
    const _0x4c9734 = [
        'click',
        '2003463NeSVwR',
        '421612srjbUL',
        'line_cap',
        '468706hpXyvW',
        'use_encoded_shape_polyline',
        'stroke_weight',
        'length',
        'push',
        '4EvreYc',
        'zoom_map_to_this_line',
        'encoded_shape',
        '1308iCKzCO',
        '873573lNCOdn',
        'data',
        '343890FmZjJo',
        'charCodeAt',
        'publishState',
        'line_join',
        '11010iuxazV',
        '40RQLTWb',
        'list_of_longitudes',
        'list_of_latitudes',
        '2585597fRtuMM',
        'fitBounds',
        '8nsioEU',
        'polyline',
        'mymap',
        'get',
        'polyline_name',
        'forEach',
        'addTo'
    ];
    _0x21db = function () {
        return _0x4c9734;
    };
    return _0x21db();
}
	 run(instance, properties, context);
}